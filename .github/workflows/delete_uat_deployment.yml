name: Delete UAT deployment

on:
  pull_request:
    types:
      - closed

jobs:
  merge_job:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
    - name: Extract branch name
      shell: bash
      run: |
        if [ $GITHUB_EVENT_NAME == "pull_request" ]
        then
          branch=$GITHUB_HEAD_REF
        else
          branch=${GITHUB_REF#refs/heads/}
        fi

        echo "##[set-output name=branch;]$(echo $branch)"
      id: extract_branch

    - name: Extract release name
      id: extract_release
      shell: bash
      run: |
        branch=${{ steps.extract_branch.outputs.branch }}
        truncated_branch=$(echo $branch | sed 's:^\w*\/::' | tr -s ' _/[]().' '-' | cut -c1-30 | sed 's/-$//')
        echo "##[set-output name=release;]$(echo "apply-${truncated_branch}")"

    - name: Authenticate to the cluster
      env:
        K8S_CLUSTER: ${{ secrets.K8S_CLUSTER_NAME_LIVE }}
        K8S_CLUSTER_CERT: ${{ secrets.K8S_CLUSTER_CERT_LIVE }}
        K8S_NAMESPACE: ${{ secrets.K8S_UAT_NAMESPACE }}
        K8S_TOKEN: ${{ secrets.K8S_UAT_TOKEN_LIVE }}
      run: |
        echo -n ${K8S_CLUSTER_CERT} | base64 -d > ./ca.crt
        kubectl config set-cluster ${K8S_CLUSTER} --certificate-authority=./ca.crt --server=https://${K8S_CLUSTER}
        kubectl config set-credentials circleci --token=${K8S_TOKEN}
        kubectl config set-context ${K8S_CLUSTER} --cluster=${K8S_CLUSTER} --user=circleci --namespace=${K8S_NAMESPACE}
        kubectl config use-context ${K8S_CLUSTER}

    - name: Delete UAT release
      run: |
        release_name=${{ steps.extract_release.outputs.release }}
        found=$(helm list --all | grep $release_name)

        if [[ ! -z "$found" ]]
        then
          echo "Deleting UAT release ${release_name}..."
          helm delete $release_name
        else
          echo "UAT release, ${release_name}, not found!"
        fi

  close_job:
    if: github.event.pull_request.merged == false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - id: foo
        uses: ./.github/actions/whatever
        with:
          k8s_cluster: ${{ secrets.K8S_CLUSTER_NAME_LIVE }}
          k8s_cluster_cert: ${{ secrets.K8S_CLUSTER_CERT_LIVE }}
          k8s_namespace: ${{ secrets.K8S_UAT_NAMESPACE }}
          k8s_token: ${{ secrets.K8S_UAT_TOKEN_LIVE }}

      # - name: Setup tmate session
      #   if: ${{ failure() }}
      #   uses: mxschmitt/action-tmate@v3
      #   timeout-minutes: 15
      #   with:
      #     limit-access-to-actor: true
