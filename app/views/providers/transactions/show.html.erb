<%= page_template page_title: t("transaction_types.page_titles.#{@transaction_type.name}"),
                  caption: t("generic.client_means_caption"), column_width: "full", template: :default do %>

  <div class="govuk-body"><%= t("transaction_types.#{@transaction_type.name}.inset_text") %></div>

  <% if %w[benefits excluded_benefits].include?(@transaction_type.name) %>
    <%= render "providers/means/regular_incomes/cost_of_living_and_disregarded_benefits" %>
  <% end %>

  <% if I18n.exists?("transaction_types.#{@transaction_type.name}.details_summary_heading") %>
    <details class="govuk-details govuk-!-margin-top-4" data-module="govuk-details">
      <summary class="govuk-details__summary"
        title="<%= t("transaction_types.#{@transaction_type.name}.details_summary_heading") %>"
        aria-label="<%= t("transaction_types.#{@transaction_type.name}.details_summary_heading") %>">
        <%= t("transaction_types.#{@transaction_type.name}.details_summary_heading") %>
      </summary>

      <div class="govuk-details__text">
        <%= t("transaction_types.#{@transaction_type.name}.subheading") %>
        <div class="govuk-!-padding-bottom-4"></div>

        <ul class="govuk-list govuk-list--bullet">
          <% t("transaction_types.#{@transaction_type.name}.list").each_line do |examples| %>
            <li><%= examples %></li>
          <% end %>
        </ul>
        <div class="govuk-!-margin-bottom-0"></div>
        <%= t("transaction_types.#{@transaction_type.name}.closing_text") %>
      </div>
    </details>
  <% end %>

  <div class="govuk-!-padding-bottom-4"></div>

  <%= form_with(method: :patch, local: true) do |form| %>

    <%= form.hidden_field :transaction_type, value: @transaction_type.name %>
    <div id="screen-reader-messages" class="govuk-visually-hidden" role="alert" aria-live="assertive"></div>

    <%= govuk_table(html_attributes: { class: "sortable table-merge_columns" }) do |table|
          table.with_caption do
            if @bank_transactions.any?
              tag.h2 do
                t(".table_description_html", from: date_from(@legal_aid_application), to: date_to(@legal_aid_application))
              end
            end
          end

          table.with_head do |head|
            head.with_row do |row|
              row.with_cell(html_attributes: { class: "select-clear-all", "data-copy-clear": t(".col_clear_all"), "data-copy-select": t(".col_select_all") })
              row.with_cell(html_attributes: { class: "sort header-sort-desc", "data-sort-type": "date" }) do
                tag.span(class: "aria-sort-description") do
                  concat t(".col_date")
                  concat tag.span(class: "sort-direction-indicator")
                end
              end
              row.with_cell(html_attributes: { class: "sort", "data-sort-type": "alphabetic" }) do
                tag.span(class: "aria-sort-description") do
                  concat t(".col_description")
                  concat tag.span(class: "sort-direction-indicator")
                end
              end
              row.with_cell(html_attributes: { class: "sort", "data-sort-type": "numeric" }, numeric: true) do
                tag.span(class: "aria-sort-description") do
                  concat t(".col_amount")
                  concat tag.span(class: "sort-direction-indicator")
                end
              end
              row.with_cell(html_attributes: { class: "sort", "data-sort-type": "alphabetic" }) do
                tag.span(class: "aria-sort-description") do
                  concat t(".col_category")
                  concat tag.span(class: "sort-direction-indicator")
                end
              end
            end
          end

          table.with_body do |body|
            form.collection_check_boxes :transaction_ids, @bank_transactions, :id, :description, boolean_style: :inline do |builder|
              body.with_row do |row|
                row.with_cell(html_attributes: { class: "tick-box-cell" }) do
                  if builder.object.transaction_type_id.nil?
                    tag.div(class: "govuk-checkboxes__item") do
                      checked = builder.object.transaction_type_id == @transaction_type.id
                      builder.check_box(class: "govuk-checkboxes__input", checked:)
                      builder.label(class: "govuk-label govuk-checkboxes__label govuk-visually-hiddenX") do
                        "#{builder.object.description}, #{value_with_currency_unit(builder.object.amount, builder.object.currency)} on #{l(builder.object.happened_at.to_date, format: :long_date)}"
                      end
                    end
                  end
                end

                row.with_cell(html_attributes: { class: "sortable-cell", "data-sort-value": [builder.object.happened_at.to_i, builder.object.description], id: "Date-#{builder.object.id}" }) do
                  l(builder.object.happened_at.to_date, format: :short_date)
                end

                row.with_cell(html_attributes: { class: "sortable-cell", id: "Description-#{builder.object.id}" }) do
                  builder.object.description
                end

                row.with_cell(html_attributes: { class: "sortable-cell", "data-sort-value": builder.object.amount, id: "Amount-#{builder.object.id}" }, numeric: true) do
                  value_with_currency_unit(builder.object.amount, builder.object.currency)
                end

                if builder.object.transaction_type_id.nil?
                  row.with_cell(html_attributes: { class: "sortable-cell", "data-sort-value": "ZZZ", id: "Category-#{builder.object.id}" }) do
                    concat govuk_tag(html_attributes: { class: "table-category table-category-vacant" }, text: t("activemodel.attributes.transaction_types.name.#{@transaction_type.name}"))
                  end
                else
                  row.with_cell(html_attributes: { class: "sortable-cell", "data-sort-value": t("activemodel.attributes.transaction_types.name.#{@transaction_type.name}"), id: "Category-#{builder.object.id}" }) do
                    concat govuk_tag(text: t("activemodel.attributes.transaction_types.name.#{@transaction_type.name}"))
                  end
                end
              end
            end
          end
        end %>

    <%= next_action_buttons(show_draft: true, form:) %>
  <% end %>
<% end %>
