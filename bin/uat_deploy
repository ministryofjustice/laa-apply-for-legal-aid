#!/bin/sh

clean_old_releases() {
  RELEASES=$(helm list --tiller-namespace=laa-apply-for-legalaid-uat --namespace=laa-apply-for-legalaid-uat --all -d -r -q)
  RELEASE_COUNT=$(helm list --tiller-namespace=laa-apply-for-legalaid-uat --namespace=laa-apply-for-legalaid-uat --all -d -r -q | wc -l)
  echo "There are currently $RELEASE_COUNT releases"

  for release in $RELEASES; do
    echo "** $release"
  done

  RELEASES_TO_KEEP=10
  DIFF=$((RELEASE_COUNT-RELEASES_TO_KEEP))

  if [[ $DIFF -gt -0 ]]; then
    RELEASES_TO_DELETE=$(helm list --tiller-namespace=laa-apply-for-legalaid-uat --namespace=laa-apply-for-legalaid-uat --all -d -r -q | tail -n $DIFF)

    echo "Cleaning the $DIFF oldest..."
    for release in $RELEASES_TO_DELETE; do
      echo "[DELETING] Deleting release $release..."
      $(helm delete $release --tiller-namespace=laa-apply-for-legalaid-uat --purge)
    done
  else
    echo "$RELEASES_TO_KEEP or less releases: no old releases to clean. Yay!"
  fi
}

deploy() {
  IMG_REPO="$ECR_ENDPOINT/$GITHUB_TEAM_NAME_SLUG/$REPO_NAME"
  RELEASE_BRANCH=$(echo $CIRCLE_BRANCH | rev | cut -c1-30 | rev | tr -s ' _/[]()' '-' | sed "s/^-//")
  RELEASE_NAME="$APPLICATION_DEPLOY_NAME-$RELEASE_BRANCH"
  RELEASE_HOST="$RELEASE_BRANCH-$UAT_HOST"

  echo "Deploying CIRCLE_SHA1: $CIRCLE_SHA1 under release name: '$RELEASE_NAME'..."

  helm upgrade $RELEASE_NAME ./helm_deploy/apply-for-legal-aid-uat/. \
                --install --force --wait \
                --tiller-namespace=${KUBE_ENV_UAT_NAMESPACE} \
                --namespace=${KUBE_ENV_UAT_NAMESPACE} \
                --values ./helm_deploy/apply-for-legal-aid-uat/values-uat.yaml \
                --set deploy.host="$RELEASE_HOST" \
                --set image.repository="$IMG_REPO" \
                --set image.tag="${CIRCLE_SHA1}" \
                --set ingress.hosts="{$RELEASE_HOST}" \
                --set replicaCount="1"
}

clean_old_releases
deploy
