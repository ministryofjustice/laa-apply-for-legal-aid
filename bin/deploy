#!/bin/sh

ENVIRONMENT=$1

PINGDOM_IPS=$(curl -s https://my.pingdom.com/probes/ipv4 | tr -d ' ' | tr '\n' ',' | sed 's/,/\\,/g' | sed 's/\\,$//')

deploy_branch() {
  # Convert the branch name into a string that can be turned into a valid URL
  RELEASE_BRANCH=$(echo $CIRCLE_BRANCH | tr '[:upper:]' '[:lower:]' | sed 's:^\w*\/::' | tr -s ' _/[]().' '-' | cut -c1-30 | sed 's/-$//')

  RELEASE_NAME="apply-$RELEASE_BRANCH"
  RELEASE_HOST="$RELEASE_BRANCH-applyforlegalaid-uat.cloud-platform.service.justice.gov.uk"
  INGRESS_NAME=$(echo "$RELEASE_NAME-apply-for-legal-aid" | cut -c1-53 | sed 's/-$//')
  INGRESS_IDENTIFIER="$INGRESS_NAME-${K8S_NAMESPACE}-green"
  PUBLIC_INGRESS_IDENTIFIER="$INGRESS_NAME-public-${K8S_NAMESPACE}-green"

  echo "Deploying CIRCLE_SHA1: $CIRCLE_SHA1 under release name: '$RELEASE_NAME'..."

  helm upgrade $RELEASE_NAME ./helm_deploy/apply-for-legal-aid/. \
                --install --wait \
                --namespace=${K8S_NAMESPACE} \
                --values ./helm_deploy/apply-for-legal-aid/values-uat.yaml \
                --set deploy.host="$RELEASE_HOST" \
                --set image.repository="${ECR_REGISTRY}/${ECR_REPOSITORY}" \
                --set image.tag="${CIRCLE_SHA1}" \
                --set ingress.hosts="{$RELEASE_HOST}" \
                --set ingress.annotations."external-dns\.alpha\.kubernetes\.io/set-identifier"="$INGRESS_IDENTIFIER" \
                --set publicIngress.annotations."external-dns\.alpha\.kubernetes\.io/set-identifier"="$PUBLIC_INGRESS_IDENTIFIER" \
                --set omniauth_entraid.redirect_uri="https://${RELEASE_HOST}/auth/entra_id/callback" \
                --set-string clientlessVpnIPs="$CLIENTLESS_VPN_IPS" \
                --set-string sharedIPs="$SHARED_IPS"
                --set-string pingdomIPs="$PINGDOM_IPS"
}

deploy_main() {
  helm upgrade apply-for-legal-aid ./helm_deploy/apply-for-legal-aid/. \
                --install --wait \
                --namespace=${K8S_NAMESPACE} \
                --values ./helm_deploy/apply-for-legal-aid/values-"$ENVIRONMENT".yaml \
                --set image.repository="${ECR_REGISTRY}/${ECR_REPOSITORY}" \
                --set image.tag="${CIRCLE_SHA1}" \
                --set-string pingdomIPs="$PINGDOM_IPS"
}

if [[ "$ENVIRONMENT" == "uat" ]]; then
  if deploy_branch; then
    echo "Deploy succeeded"
  else
    # If a previous `helm upgrade` was cancelled this could have got the release stuck in
    # a "pending-upgrade" state (c.f. https://stackoverflow.com/a/65135726). If so, this
    # can generally be fixed with a `helm rollback`, so we try that here.
    echo "Deploy failed. Attempting rollback"

    if helm rollback "$RELEASE_NAME"; then
      echo "Rollback succeeded. Retrying deploy"
      deploy_branch
    else
      echo "Rollback failed. Consider manually running 'helm delete $RELEASE_NAME'"
      exit 1
    fi
  fi
else
  deploy_main
fi
