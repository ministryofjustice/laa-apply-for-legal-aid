#!/usr/bin/env ruby

class ApplicationRequirementSetup
  require 'fileutils'
  include FileUtils

  # path to your application root.
  APP_ROOT = File.expand_path('..', __dir__)

  def system!(*args)
    system(*args) || abort("\n== Command #{args} failed ==")
  end

  def copy_sample_file(src, dst)
    if File.exist?(dst)
      puts "\n #{dst} already exists! Skipping..."
    else
      puts "\n Copying #{src} to #{dst}"
      puts "\n Modify #{dst} to your needs."
      cp(src, dst)
    end
  end

  def git_crypted?
    `grep -rq "replicaCount" ./helm_deploy/apply-for-legal-aid/values-production.yaml && echo 0 || echo 1`.chomp.to_i.eql?(1)
  end

  def call
    # This script is a starting point to setup your application.
    # Add necessary setup steps to this file.
    chdir APP_ROOT do
      install_dependencies
      copy_sample_files
      setup_database
      remove_logs
      yarn_install
      restart
      install_clam_av
    end
  end

  def install_dependencies
    puts '== Installing dependencies =='
    system! 'gem install bundler --conservative'
    system('bundle check') || system!('bundle install')
  end

  def copy_sample_files
    puts "\n== Copying sample files =="
    copy_sample_file '.env.sample', '.env.development'
  end

  def setup_database
    if git_crypted?
      puts "\n== Skipping database =="
      puts "\n== git-crypt enabled =="
    else
      puts "\n== Preparing database =="
      system! 'bin/rails db:setup'
    end
  end

  def remove_logs
    puts "\n== Removing old logs and tempfiles =="
    system! 'bin/rails log:clear tmp:clear'
  end

  def yarn_install
    puts "\n== Installing JavaScript dependencies =="
    system! 'yarn install'
  end

  def restart
    puts "\n== Restarting application server =="
    system! 'bin/rails restart'
  end

  def install_clam_av
    system! 'bin/install_clamav_on_mac' if Gem::Platform.local.os == 'darwin' # if on Mac
  end
end

ApplicationRequirementSetup.new.call
