apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "apply-for-legal-aid.fullname" . }}-drainer
  labels:
    app: {{ template "apply-for-legal-aid.name" . }}
    chart: {{ template "apply-for-legal-aid.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.worker.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 100%
  selector:
    matchLabels:
      app: {{ template "apply-for-legal-aid.name" . }}-drainer
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "apply-for-legal-aid.name" . }}-drainer
        release: {{ .Release.Name }}
    spec:
      serviceAccountName: "{{ .Values.service_account.name }}"
      containers:
        - name: drainer
          image: '{{ .Values.image.repository }}:{{ .Values.image.tag }}'
          imagePullPolicy: IfNotPresent
          command: ['bundle', 'exec', 'sidekiq']
{{ include "apply-for-legal-aid.envs" . | nindent 10 }}
            - name: NAMEPSPACED_SIDEKIQ_DRAINER
              value: "true"
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 10m
              memory: 512Mi
          ports:
            - containerPort: 7433
          livenessProbe:
            exec:
              command: ['bin/sidekiq_health_check']
            initialDelaySeconds: 60
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command: ['bin/sidekiq_health_check']
            initialDelaySeconds: 60
            timeoutSeconds: 5
          lifecycle:
            preStop:
              exec:
                command: ['bundle', 'exec', 'sidekiqctl', 'quiet']
      terminationGracePeriodSeconds: 60
