apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "apply-for-legal-aid.fullname" . }}-clamav
  labels:
    app: {{ template "apply-for-legal-aid.name" . }}
    chart: {{ template "apply-for-legal-aid.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.clamav.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      service: {{ template "apply-for-legal-aid.fullname" . }}-clamav
  template:
    metadata:
      labels:
        app: {{ template "apply-for-legal-aid.name" . }}
        release: {{ .Release.Name }}
        service: {{ template "apply-for-legal-aid.fullname" . }}-clamav
    spec:
      serviceAccountName: "{{ .Values.service_account.name }}"
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        runAsGroup: 1000
      containers:
        - name: clamav
          image: ghcr.io/ministryofjustice/clamav-docker/laa-clamav:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 3310
              protocol: TCP
          volumeMounts:
            - name: clamav-signatures-volume
              mountPath: /var/lib/clamav
          env:
            - name: FRESHCLAM_CHECKS
              value: "{{ .Values.clamav.freshclamCheck }}"
            - name: MIRROR_URL
              value: "{{ .Values.clamav.mirror }}"
          resources:
            requests:
              cpu: 25m
              memory: 1Gi
            limits:
              cpu: 500m
              memory: 3Gi
              memory: 3Gi
          startupProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - echo "started" > /tmp/starttest && clamdscan --no-summary /tmp/starttest
            failureThreshold: 60
            periodSeconds: 5
          readinessProbe:
            tcpSocket:
              port: 3310
            periodSeconds: 10
            failureThreshold: 3
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - clamdscan --no-summary /tmp/starttest
            periodSeconds: 30
            failureThreshold: 3
          securityContext:
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop: [ "ALL" ]
      volumes:
      - name: clamav-signatures-volume
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-clamav-signatures-pvc
